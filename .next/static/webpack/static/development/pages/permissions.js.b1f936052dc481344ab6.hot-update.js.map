{"version":3,"file":"static/webpack/static/development/pages/permissions.js.b1f936052dc481344ab6.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport { Mutation } from 'react-apollo';\n\nimport Error from './ErrorMessage';\nimport Table from './styles/Table'\nimport SickButton from './styles/SickButton';\n\nconst possiblePermissions = [\n    'ADMIN',\n    'USER',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE'\n]\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation UPDATE_PERMISSIONS_MUTATION($userId: ID!, $permissions: [Permission]){\n        updatePermissions(permissions: $permissions, userId: $userId){\n            id\n            permissions\n            name\n            email\n        }\n    }\n`;\n\nconst ALL_USERS_QUERY = gql`\n    query ALL_USERS_QUERY {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`\n\nconst Permissions = () => {\n    return (\n        <Query query={ALL_USERS_QUERY}>\n            {\n                ({ data, loading, error }) => (\n                    <>\n                        <Error error={error} />\n                        <div>\n                            <h2>Manage Permissions</h2>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Email</th>\n                                        {possiblePermissions.map((permission, index) => <th key={index}>{permission}</th>)}\n                                        <th></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {data.users.map(user => <UserPermissions key={user.id} user={user} />)}\n                                </tbody>\n                            </Table>\n                        </div>\n                    </>\n                )\n            }\n        </Query>\n    )\n}\n\nimport React, { Component } from 'react'\n\nclass UserPermissions extends Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            name: PropTypes.string,\n            email: PropTypes.string,\n            id: PropTypes.string,\n            permissions: PropTypes.array\n        }).isRequired\n    }\n\n    state = {\n        permissions: this.props.user.permissions\n    }\n\n    handlePermissionChange = (e, updatePermissions) => {\n        const { target: { value, checked } } = e;\n        let updatedPermissions = this.state.permissions;\n        if (checked) {\n            updatedPermissions.push(value)\n        } else {\n            updatedPermissions = updatedPermissions.filter(permission => permission !== value);\n        }\n        this.setState({\n            permissions: updatedPermissions\n        }, () => updatePermissions());\n    }\n\n    render() {\n        const { user } = this.props;\n        const { permissions } = this.state;\n        return (\n            <Mutation mutation={UPDATE_PERMISSIONS_MUTATION} variables={{\n                permissions: permissions,\n                userId: user.id\n            }}>\n                {(updatePermissions, { loading, error }) => ( \n                    <>    \n                    {error && <tr><td colSpan={3 + possiblePermissions.length}><Error error={error} /></td></tr>}               \n                    <tr>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        {possiblePermissions.map((permission, index) => (\n                            <td key={index}>\n                                <label htmlFor={`${user.id}-permission-${permission}`}>\n                                    <input type=\"checkbox\" id={`${user.id}-permission-${permission}`} onChange={e =>this.handlePermissionChange(e, updatePermissions)} checked={permissions.includes(permission)} value={permission} />\n                                </label>\n                            </td>\n                        ))}\n                        <td>\n                        <SickButton onClick={updatePermissions} type=\"button\" disabled={loading}>Updat{loading ? 'ing' : 'e'}</SickButton>\n                        </td>\n                    </tr>\n                    </>\n                )}\n            </Mutation>\n        )\n    }\n}\n\nexport default Permissions\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAwBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAqBA;;;;AAxDA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAyDA;;;;A","sourceRoot":""}
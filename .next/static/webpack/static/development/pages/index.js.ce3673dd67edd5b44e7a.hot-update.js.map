{"version":3,"file":"static/webpack/static/development/pages/index.js.ce3673dd67edd5b44e7a.hot-update.js","sources":["webpack:///./components/Pagination.js"],"sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\n\nimport PaginationStyles from './styles/PaginationStyles'\nimport { perPage } from '../config';\n\n\nconst PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY {\n        itemsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`\n\nconst Pagination = ({ page }) => {\n    return (\n        <Query query={PAGINATION_QUERY}>\n            {({ data, error, loading }) => {\n                if (loading) return <p>Loading...</p>\n                const count = data.itemsConnection.aggregate.count;\n                const pages = Math.ceil(count / perPage);\n                return (\n                    <PaginationStyles>\n                        <Head>\n                            <title>Sick Fits | Page {page} of {pages}</title>\n                        </Head>\n                        <Link \n                        prefetch\n                         href={{\n                            pathname: 'items',\n                            query: {page: page - 1},\n                        }}>\n                           <a className=\"prev\" aria-disabled={page <= 1}>Prev</a>\n                        </Link>\n                        <p>Page {page} of {pages}!</p>\n\n                        <Link \n                        prefetch\n                         href={{\n                            pathname: 'items',\n                            query: {page: page + 1},\n                        }}>\n                           <a className=\"next\" aria-disabled={page >= pages}>Prev</a>\n                        </Link>\n                    </PaginationStyles>\n\n                )\n            }}\n        </Query>\n    )\n}\n\nexport default Pagination;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AASA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;AACA;AACA;;;;A","sourceRoot":""}
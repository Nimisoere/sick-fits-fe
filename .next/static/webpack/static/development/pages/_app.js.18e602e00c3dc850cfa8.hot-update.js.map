{"version":3,"file":"static/webpack/static/development/pages/_app.js.18e602e00c3dc850cfa8.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Downshift from \"downshift\";\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql`\n    query SEARCH_ITEMS_QUERY($searchTerm: String!){\n        items(where: \n            {OR:[\n                {title_contains: $searchTerm},\n                {description_contains: $searchTerm}\n                ]\n            }){\n                id\n                image\n                title\n            }\n    }\n `\n\nclass AutoComplete extends Component {\n    state = {\n        items: [],\n        loading: false\n    }\n    onChange = debounce(async (e, client) => {\n        this.setState({ loading: true })\n        const res = await client.query({\n            query: SEARCH_ITEMS_QUERY,\n            variables: { searchTerm: e.target.value }\n        });\n        this.setState({\n            items: res.data.items,\n            loading: false\n        })\n    }, 350);\n\n    render() {\n        const { items, loading } = this.state;\n        return (\n            <SearchStyles>\n                <Downshift>\n                    {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n                        <div>\n                            <ApolloConsumer>\n                                {\n                                    client => (\n                                        <input {...getInputProps({\n                                            type: 'search',\n                                            placeholder: 'Search for an item',\n                                            id: 'search',\n                                            className: loading ? 'loading' : '',\n                                            onChange: e => {\n                                                e.persist()\n                                                this.onChange(e, client)\n                                            }\n                                        })} type=\"search\" name=\"\" id=\"\" />\n                                    )\n                                }\n                            </ApolloConsumer>\n                            {isOpen && <DropDown>\n                                {items.map(item => <DropDownItem {...getItemProps({item})} key={item.id}>\n                                    <img src={item.image} width=\"50\" alt={item.title} key={item.id} />\n                                    {item.title}\n                                </DropDownItem>)}\n                            </DropDown>}\n                        </div>\n                    )}\n                </Downshift>\n            </SearchStyles>\n        )\n    }\n}\n\nexport default AutoComplete\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAWA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AASA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAnBA;AA6BA;;;;AAnDA;AACA;AAqDA;;;;A","sourceRoot":""}
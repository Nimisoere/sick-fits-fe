{"version":3,"file":"static/webpack/static/development/pages/items.js.8934875705a959848ee3.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n\nexport const ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY($skip: Int = 0, $first: Int = ${perPage} ) {\n        items(first: $first, skip: $skip, orderBy: price_DESC) {\n            id\n            title\n            price\n            description\n            image\n            largeImage\n        }\n    }\n`;\n\nconst Centered = styled.div`\n    text-align: center;\n`\n\nconst ItemList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n    max-width: ${props => props.theme.maxWidth};\n    margin: 0 auto;\n`\n\nclass Items extends Component {\n    render() {\n        const {page} = this.props;\n        return (\n            <Centered>\n                <Pagination page={page} />\n                <Query query={ALL_ITEMS_QUERY} variables={{\n                    skip: page * perPage - perPage,\n                    first: perPage\n                }}>\n                    {({data, error, loading}) => {\n                        if(loading) return <p>Loading...</p>\n                        if(error) return <p>Error: {error.message}</p>\n                        return <ItemList>\n                            {data.items.map(item => <Item item={item} key={item.id} />)}\n                        </ItemList>\n                    }}\n                </Query>\n                <Pagination page={page} />\n            </Centered>\n        )\n    }\n}\n\nexport default Items"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AArBA;AACA;AAuBA;;;;A","sourceRoot":""}
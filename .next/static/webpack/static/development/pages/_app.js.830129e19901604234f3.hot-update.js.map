{"version":3,"file":"static/webpack/static/development/pages/_app.js.830129e19901604234f3.hot-update.js","sources":["webpack:///./components/Payment.js"],"sourcesContent":["import React, { Component, Children } from 'react'\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!){\n        createOrder(token: $token){\n            id\n            charge\n            total\n            items {\n                id\n                title\n            }\n        }\n    }\n`;\n\n\nconst totalItems = (cart) => {\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0)\n}\n\nclass Payment extends Component {\n    onToken = async (res, createOrder) => {\n        const order = await createOrder({variables:{token: res.id}}).catch(err => {\n            alert(err.message)\n        })\n        Router.push({\n            pathname: 'order',\n            query: {\n                id: order.data.createOrder.id\n            }\n        })\n    }\n    render() {\n        const { children } = this.props;\n        return (\n            <User>\n                {({ data: { me } }) => (\n                    <Mutation mutation={CREATE_ORDER_MUTATION} refetchQueries={[{\n                        query: CURRENT_USER_QUERY\n                    }]}>\n                        {\n                            (createOrder, {loading, error}) => (\n                                <StripeCheckout\n                                    amount={calcTotalPrice(me.cart)}\n                                    name=\"Sick Fits\"\n                                    description={`Order of ${totalItems(me.cart)} items`}\n                                    image={me.cart.length && me.cart[0] && me.cart[0].item && me.cart[0].item.image}\n                                    stripeKey=\"pk_test_AkAfxCYytW96CAv1dTFOEV0b00gqNdZlhS\"\n                                    currency=\"USD\"\n                                    email={me.email}\n                                    token={res => this.onToken(res, createOrder)}\n                                >\n                                    {children}\n                                </StripeCheckout>\n                            )\n                        }\n\n                    </Mutation>\n\n                )}\n            </User>\n        )\n    }\n}\n\nexport default Payment\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAcA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AACA;AAGA;AACA;AACA;AACA;AADA;AAFA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAUA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AALA;AA0BA;;;;AA1CA;AACA;AA4CA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/sell.js.ab7a9c546f24afce7c92.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nexport const CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $image: String\n        $largeImage: String\n        $price: Int!\n    ){\n        createItem(\n            title: $title\n            description: $description\n            image: $image\n            largeImage: $largeImage\n            price: $price\n        ){\n            id\n        }\n    }\n`\n\nclass CreateItem extends Component {\n    state = {\n        title: '',\n        description: '',\n        image: '',\n        largeImage: '',\n        price: 0,\n    }\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' && value ? parseFloat(value)  : value;\n        this.setState({\n            [name]: val\n        })\n    };\n\n    uploadFile = async e => {\n        const files = e.target.files;\n        if (files && files.length) {\n            const data = new FormData();\n            data.append('file', files[0]);\n            data.append('upload_preset', 'sickfits');\n            const res = await fetch('https://api.cloudinary.com/v1_1/nimisoere/image/upload', {\n                method: 'POST',\n                body: data\n            });\n            const file = await res.json();\n            this.setState({\n                image: file.secure_url,\n                largeImage: file.eager[0].secure_url\n            })\n        }\n\n    }\n\n    render() {\n        const {title, description, image, price} = this.state;\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, { loading, error }) => (\n                    <Form onSubmit={async e => {\n                        e.preventDefault();\n                        const res = await createItem();\n                        Router.push({\n                            pathname: '/item',\n                            query: { id: res.data.createItem.id }\n                        })\n                    }}>\n                        <Error error={error} />\n                        <fieldset disabled={loading} aria-busy={loading} >\n                            <label htmlFor=\"file\">\n                                Title\n                                <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\" value={title} onChange={this.handleChange} required />\n                            </label>\n                            <label htmlFor=\"title\">\n                                Image\n                                <input type=\"file\" name=\"file\" id=\"file\" placeholder=\"Upload an image\" onChange={this.uploadFile} required />\n                                {!!image && <img width=\"200\" src={image} alt={title || 'Upload preview'} />}\n                            </label>\n                            <label htmlFor=\"price\">\n                                Price\n                                <input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Price\" value={price} onChange={this.handleChange} required />\n                            </label>\n                            <label htmlFor=\"description\">\n                                Description\n                                <textarea name=\"description\" id=\"description\" placeholder=\"Enter a description\" value={description} onChange={this.handleChange} required />\n                            </label>\n                            <button type=\"submit\">Submit</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        )\n    }\n}\n\nexport default CreateItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AALA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAkkCA;;;;AA1EA;AACA;AA4EA;;;;A","sourceRoot":""}